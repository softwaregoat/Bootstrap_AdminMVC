@model admindx.Models.p_tipodoc

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>p_tipodoc</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        <div class="form-group">
            @Html.LabelFor(model => model.id_subserie, "id_subserie", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select id="id_subserie" name="id_subserie" class="form-control">
                    @foreach (var item in Model.id_subseries)
                    {
                        if (Model.id_subserie == item)
                        {
                            <option value="@item" selected>@item</option>
                        }
                        else
                        {
                            <option value="@item">@item</option>
                        }
                    }
                    <option value="value">text</option>
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cod, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cod, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cod, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.img, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.img, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.img, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.multiterceros, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.multiterceros, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.multiterceros, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.principal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.principal, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.principal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.excluir, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.excluir)
                    @Html.ValidationMessageFor(model => model.excluir, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
